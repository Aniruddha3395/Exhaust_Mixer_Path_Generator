clc;
clear;
close all;

%% import STL
[v, f, n, c, stltitle] = stlread('try5.stl');          %STL import
close all;    %closing plots generated by function 
col_matrix = [0.7, 0.7, 0.7];   %color for new plot
% figure('Name','main_fig','units','normalized','outerposition',[0 0 1 1])       %new plot directly maximized window
daspect([1,1,1])            %putting aspect ratio to be 1:1:1
patch('Faces',f,'Vertices',v,'FaceVertexCData',col_matrix,'FaceColor',col_matrix, 'EdgeAlpha', 0.5);
% set(gca,'zdir','reverse')
xlabel('X-Axis')
ylabel('Y-Axis')
zlabel('Z-Axis')
view(3)             %directly viewing plot in 3D

hold on;
pts = unique(v,'rows');

scatter3(pts(:,1),pts(:,2),pts(:,3),'.');

proj = [(pts(:,1)-pts(:,2))/2,(pts(:,2)-pts(:,1))/2,pts(:,3)];
hold on;
scatter3(pts(:,1),pts(:,2),pts(:,3),'r','.');
% hold on;
% scatter3(proj(:,1),proj(:,2),proj(:,3),'b','.');      %projection of stl file on y = -x plane


%point grid
xmax = 100;
zmax = 100;
ptsgap= 5;
pts = [];
for i = -100:ptsgap:ceil(xmax)
    j = [-100:ptsgap:ceil(zmax)]';
    pts= [pts;[[i*ones(size(j,1),1)],j]];
end

q = [pts(:,1),zeros(size(pts,1),1),pts(:,2)+100];
hold on;
% scatter3(q(:,1),q(:,2),q(:,3),'g','.')
proj = [(q(:,1)-q(:,2))/2,(q(:,2)-q(:,1))/2,q(:,3)];
hold on;
scatter3(proj(:,1),proj(:,2),proj(:,3),'b','.');
xlabel('x');
ylabel('y');
zlabel('z');



%forming triangles

store_main = [];
for i=1:size(f,1)
% i = 1;
p1 = v(f(i,1),:);
p2 = v(f(i,2),:);
p3 = v(f(i,3),:);
tri = [p1;p2;p3;p1];
% hold on;
% plot3(tri(:,1),tri(:,2),tri(:,3),'g')
% hold on;
% scatter3(tri(:,1),tri(:,2),tri(:,3),'g')

tri_proj = [(tri(:,1)-tri(:,2))/2,(tri(:,2)-tri(:,1))/2,tri(:,3)];
% hold on;
% plot3(tri_proj(:,1),tri_proj(:,2),tri_proj(:,3),'r')
% hold on;
% scatter3(tri_proj(:,1),tri_proj(:,2),tri_proj(:,3),'r')

% hold on;
% scatter3(zeros(size(proj,1),1),proj(:,2),proj(:,3),'k','.');
% hold on;
% scatter3(zeros(size(tri_proj,1),1),tri_proj(:,2),tri_proj(:,3),'k');
% hold on;
% plot3(zeros(size(tri_proj,1),1),tri_proj(:,2),tri_proj(:,3),'k');


% hor_grid = [proj(:,2),proj(:,3)];
% hor_tri = [tri_proj(:,2),tri_proj(:,3)];
% figure;
% scatter(hor_grid(:,1),hor_grid(:,2),'.');
% hold on;
% plot(hor_tri(:,1),hor_tri(:,2));
%    
% in = inpolygon(hor_grid(:,1),hor_grid(:,2),hor_tri(:,1),hor_tri(:,2));
% loc = find(in);
% store = [[hor_grid(loc,1),hor_grid(loc,2)]];
% 
% hold on;
% scatter(store(:,1),store(:,2),'k')



in = inpolygon(proj(:,2),proj(:,3),tri_proj(:,2),tri_proj(:,3));
loc = find(in);
store = [proj(loc,2),proj(loc,3)];
store = [zeros(size(store,1),1),store(:,1),store(:,2)];

% hold on;
% scatter3(store(:,1),store(:,2),store(:,3),'r','*')
% hold on;
store = [proj(loc,1),proj(loc,2),proj(loc,3)];
% scatter3(store(:,1),store(:,2),store(:,3),'r','*')
% hold on;
% zlim([80,120])
% end

if isempty(store)==1
continue;
else
a = ((p2(2)-p1(2))*(p3(3)-p1(3)))-((p3(2)-p1(2))*(p2(3)-p1(3)));
b = ((p2(3)-p1(3))*(p3(1)-p1(1)))-((p3(3)-p1(3))*(p2(1)-p1(1)));
c = ((p2(1)-p1(1))*(p3(2)-p1(2)))-((p3(1)-p1(1))*(p2(2)-p1(2)));
d = -(a*p1(1))-(b*p1(2))-(c*p1(3));

for i = 1:size(store,1)
project(i,1) = (-d-c*store(i,3)-2*b*store(i,2))/(a+b);
project(i,2) = project(i,1)+2*store(i,2);
project(i,3) = store(i,3);
end
end
store_main = [store_main;project];

end

% hold on;
% scatter3(project(:,1),project(:,2),project(:,3),'g','*');
figure;
col_matrix = [0.7, 0.7, 0.7];   %color for new plot
% figure('Name','main_fig','units','normalized','outerposition',[0 0 1 1])       %new plot directly maximized window
daspect([1,1,1])            %putting aspect ratio to be 1:1:1
patch('Faces',f,'Vertices',v,'FaceVertexCData',col_matrix,'FaceColor',col_matrix, 'EdgeAlpha', 0.5);
% set(gca,'zdir','reverse')
xlabel('X-Axis')
ylabel('Y-Axis')
zlabel('Z-Axis')
view(3)             %directly viewing plot in 3D
hold on;
scatter3(store_main(:,1),store_main(:,2),store_main(:,3),'g','*');


%getting the path for points
store_main_proj= [(store_main(:,1)-store_main(:,2))/2,(store_main(:,2)-store_main(:,1))/2,store_main(:,3)];
hold on;
scatter3(store_main_proj(:,1),store_main_proj(:,2),store_main_proj(:,3),'g','*');
% hold on;
pathpts = [zeros(size(store_main_proj,1),1),store_main_proj(:,2),store_main_proj(:,3)];
% scatter3(pathpts(:,1),pathpts(:,2),pathpts(:,3),'r','*');


dir1 = 1;
dir2 = 2;
    
allpts = [pathpts(:,2),pathpts(:,3),store_main_proj(:,1),store_main];
allpts = sortrows(allpts,dir1);
flip = 0; 

storeset = [];
storesort = [];
counter = 1;
for i = 1:size(allpts,1)-1
    if abs(allpts(i,dir1)-allpts(i+1,dir1))<1e-5
        storeset = [storeset;allpts(i,:)];
    else
        storeset = [storeset;allpts(i,:)];
        storeset = sortrows(storeset,dir2);
        
        storeset = flipud(storeset);
        
       if (flip/2) == round(flip/2)        %means even
            storeset = flipud(storeset);
        end
        flip = flip+1;
%         storeset;
        CELL{counter,1}=storeset(:,4:6);
        counter = counter+1;
        storesort = [storesort;storeset];
        storeset = [];
        
    end
end
storeset = [storeset;allpts(size(allpts,1),:)];
storeset = sortrows(storeset,dir2)

% this is to get the direction of last line travel
if storesort(size(storesort,1),dir2)==storeset(1,dir2)
storesort = [storesort;storeset];
% storeset = unique(storeset,'rows');
CELL{counter,1}=storeset(:,4:6);
else
storeset = flipud(storeset);
storesort = [storesort;storeset];
% storeset = unique(storeset,'rows');
CELL{counter,1}=storeset(:,4:6);
end        

storesort0x1 = storesort;
% hold on;
% plot3(zeros(size(storesort0x1,1)),storesort0x1(:,1),storesort0x1(:,2),'b');
% chk = [zeros(size(storesort0x1,1),1),storesort0x1(:,1),storesort0x1(:,2)];
hold on;
plot3(storesort0x1(:,3),storesort0x1(:,1),storesort0x1(:,2),'b');

figure;
col_matrix = [0.7, 0.7, 0.7];   %color for new plot
% figure('Name','main_fig','units','normalized','outerposition',[0 0 1 1])       %new plot directly maximized window
daspect([1,1,1])            %putting aspect ratio to be 1:1:1
patch('Faces',f,'Vertices',v,'FaceVertexCData',col_matrix,'FaceColor',col_matrix, 'EdgeAlpha', 0.5);
% set(gca,'zdir','reverse')
xlabel('X-Axis')
ylabel('Y-Axis')
zlabel('Z-Axis')
view(3)             %directly viewing plot in 3D
hold on;
plot3(storesort0x1(:,4),storesort0x1(:,5),storesort0x1(:,6),'r');

figure;
col_matrix = [0.7, 0.7, 0.7];   %color for new plot
figure('Name','main_fig','units','normalized','outerposition',[0 0 1 1])       %new plot directly maximized window
daspect([1,1,1])            %putting aspect ratio to be 1:1:1
patch('Faces',f,'Vertices',v,'FaceVertexCData',col_matrix,'FaceColor',col_matrix, 'EdgeAlpha', 0.5);
% set(gca,'zdir','reverse')
xlabel('X-Axis')
ylabel('Y-Axis')
zlabel('Z-Axis')
view(3)             %directly viewing plot in 3D
hold on;
for i = 1:size(CELL,1)
    mat = CELL{i,1};
%     mat = unique(mat,'rows');
    plot3(mat(:,1),mat(:,2),mat(:,3),'g','LineWidth',2);
    hold on;
    pause(0.1)
end


%write data in notepad
% % for i = 1:size(CELL,1)
% i = 1;
% a = ['line',num2str(i),'.txt'];    
% file_write = fopen(a,'wt');
% mat = CELL{i,1};
% fprintf(a,mat);
% fclose(file_write);
% % end
% fprintf('done!\n');

%write data in notepad
for i = 1:size(CELL,1)
a = ['line',num2str(i),'.txt']; 
mat = CELL{i,1};
dlmwrite(a,mat,'delimiter',',','precision',3)
end



